{"ast":null,"code":"var _jsxFileName = \"/home/manuela/Documents/living-lab-app-react/src/component/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    this.getDataFromDb = () => {\n      fetch('https://living-lab-2.herokuapp.com/api/retrieveData').then(data => data.json()).then(res => this.setState({\n        data: res.data\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.getDataFromDb();\n\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 500);\n      this.setState({\n        intervalIsSet: interval\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({\n        intervalIsSet: null\n      });\n    }\n  }\n\n  render() {\n    const data = this.state.data;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    },\n    /*       {<table>\n             <thead>\n             <tr>\n               <th>temperature</th>\n               <th>humidity</th>\n               <th>dewpoint</th>\n               <th>pressure</th>\n               <th>light</th>\n               <th>speed</th>\n               <th>direction</th>\n               <th>rainfall</th>\n               <th>battery</th>\n             </tr>\n             </thead>\n             <tbody>\n             {data.length <= 0\n               ?   <tr><td colSpan=\"9\">no data available</td></tr>\n               : data.map((dat) => (\n                 \n                     <tr>\n                     <td>{dat.temperature}</td> \n                     <td>{dat.humidity} </td> \n                     <td>{dat.dewpoint} </td> \n                     <td>{dat.pressure} </td> \n                     <td>{dat.light} </td> \n                     <td>{dat.speed} </td> \n                     <td>{dat.direction} </td> \n                     <td>{dat.rainfall} </td> \n                     <td>{dat.battery} </td> \n                     </tr>               \n                 ))}\n             </tbody>   \n           </table>} */\n    \"hola\");\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/manuela/Documents/living-lab-app-react/src/component/App.js"],"names":["React","Component","App","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","componentDidMount","interval","setInterval","componentWillUnmount","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONC,MAAAA,cAAc,EAAE;AAPV,KADkB;;AAAA,SA0B1BC,aA1B0B,GA0BV,MAAM;AACpBC,MAAAA,KAAK,CAAC,qDAAD,CAAL,CACGC,IADH,CACST,IAAD,IAAUA,IAAI,CAACU,IAAL,EADlB,EAEGD,IAFH,CAESE,GAAD,IAAS,KAAKC,QAAL,CAAc;AAAEZ,QAAAA,IAAI,EAAEW,GAAG,CAACX;AAAZ,OAAd,CAFjB;AAGD,KA9ByB;AAAA;;AAW1Ba,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,aAAL;;AACA,QAAI,CAAC,KAAKR,KAAL,CAAWI,aAAhB,EAA+B;AAC7B,UAAIW,QAAQ,GAAGC,WAAW,CAAC,KAAKR,aAAN,EAAqB,GAArB,CAA1B;AACA,WAAKK,QAAL,CAAc;AAAET,QAAAA,aAAa,EAAEW;AAAjB,OAAd;AACD;AACF;;AAEDE,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKjB,KAAL,CAAWI,aAAf,EAA8B;AAC5Bc,MAAAA,aAAa,CAAC,KAAKlB,KAAL,CAAWI,aAAZ,CAAb;AACA,WAAKS,QAAL,CAAc;AAAET,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACD;AACF;;AAQDe,EAAAA,MAAM,GAAG;AAAA,UACClB,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCmB,UAjCd,CADF;AAsCD;;AAxEyB;;AA2E5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: [],\n    id: 0,\n    message: null,\n    intervalIsSet: false,\n    idToDelete: null,\n    idToUpdate: null,\n    objectToUpdate: null,\n  };\n\n  componentDidMount() {\n    this.getDataFromDb();\n    if (!this.state.intervalIsSet) {\n      let interval = setInterval(this.getDataFromDb, 500);\n      this.setState({ intervalIsSet: interval });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.intervalIsSet) {\n      clearInterval(this.state.intervalIsSet);\n      this.setState({ intervalIsSet: null });\n    }\n  }\n\n  getDataFromDb = () => {\n    fetch('https://living-lab-2.herokuapp.com/api/retrieveData')\n      .then((data) => data.json())\n      .then((res) => this.setState({ data: res.data }));\n  };\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div>\n{/*       {<table>\n          <thead>\n          <tr>\n            <th>temperature</th>\n            <th>humidity</th>\n            <th>dewpoint</th>\n            <th>pressure</th>\n            <th>light</th>\n            <th>speed</th>\n            <th>direction</th>\n            <th>rainfall</th>\n            <th>battery</th>\n          </tr>\n          </thead>\n          <tbody>\n          {data.length <= 0\n            ?   <tr><td colSpan=\"9\">no data available</td></tr>\n            : data.map((dat) => (\n              \n                  <tr>\n                  <td>{dat.temperature}</td> \n                  <td>{dat.humidity} </td> \n                  <td>{dat.dewpoint} </td> \n                  <td>{dat.pressure} </td> \n                  <td>{dat.light} </td> \n                  <td>{dat.speed} </td> \n                  <td>{dat.direction} </td> \n                  <td>{dat.rainfall} </td> \n                  <td>{dat.battery} </td> \n                  </tr>               \n              ))}\n          </tbody>   \n        </table>} */\"hola\"}\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}